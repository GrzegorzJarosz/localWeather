{"version":3,"sources":["main.js"],"names":["coords","lat","lon","serviceUrl","timeClassContainer","dateClassContainer","setDate","setInterval","calendar","Date","getDate","MM","now","getMonth","YY","hh","mm","ss","DD","readyTime","dateCont","document","querySelector","innerHTML","readyDate","timeCont","getCoordinates","navigator","geolocation","getCurrentPosition","pos","crd","latitude","getData","urlBase","readyState","this","status","data","JSON","parse","responseText","displayer","xmlhttp","open","src","forEach","current_observation","icon_url","weather","temp_c","relative_humidity","pressure_mb","querySelectorAll","Math","round","wind_mph","toMpsFactor","a","city","country","location","classList","remove","observation_location","split"],"mappings":"aAAA,IAAIA,OAAS,CACZC,IAAK,GADNC,IAAIF,IAEHE,WAEGC,SAAJ,SAAIA,EAAJC,EAAAC,GAIC,IAAIC,EA4BJC,YA5Bc,SAAVD,IAFL,IAAIE,EAAQ,IAAGC,KAEVH,EAAAA,EAAOI,UACVC,EAAOC,EAAGC,WAAV,EACAC,EAAMF,EAAGA,cACTG,EAAMH,EAAGA,WACTI,EAAMJ,EAAGA,aACTK,EAAML,EAAGA,aACTM,EAAM,KACNA,EAAID,IAAKL,GACTD,EAAM,KACLO,EAAE,IAAGP,GAKFI,EAAK,KAHTA,EAAIJ,IAAKI,GAERC,EAAA,KAKAA,EAAK,IAAMA,GAHXD,EAAK,KACLE,EAAA,IAAAA,GACD,IAAAE,EAAaJ,EAAA,IAAAC,EAAA,IAAAC,EACZD,EAAWA,EAAX,IAAAL,EAAA,IAAAG,EACAM,EAAAC,SAAAC,cAAA,IAAAjB,GAAAkB,UAAAC,EAOGC,EAAWJ,SAASC,cAAc,IAAMlB,GAAoBmB,UAAYJ,GAExD,MAIlBO,eAAiB,SAAjBA,IAVDC,UAAAC,YAAAC,mBAAA,SAAAC,GACD,IAAAC,EAAIZ,EAAAA,OACJnB,OAAIwB,IAAAA,EAASQ,SACbhC,OAAIoB,IAAAA,EAAWC,UACfY,aA5BFA,QAAA,SAAAA,IA6CC,IAAMC,EAAU,yCAXjB/B,WAAIuB,UAGF1B,IAAAA,EAAA,IAAa+B,eACb/B,EAAAA,mBAAA,WACAiC,GAAO,GAAPA,KAAOE,YAAA,KAAAC,KAAAC,OAAA,CAJR,IAAAC,EAAAC,KAAAC,MAAAJ,KAAAK,cADDC,UAAAJ,KAuBCK,EAAQC,KAAK,MAAOzC,YAAY,GAdjCwC,EAAIV,QAmBAS,UAAY,SAAZA,EAAsBJ,GAVxB,IAAAO,EAAIxB,SAAKc,iBAAwBE,YAChCS,QAAIR,SAAYE,GAChBE,EAAAA,UAAAA,OAAA,aAGFC,IAAAA,EAAa,OAddtB,SAAAC,cAAA,iBAAAuB,IAAAP,EAAAS,oBAAAC,SAkBA3B,SAAAC,cAAA,eAAAC,UAAAe,EAAAS,oBAAAE,QAaC5B,SAASC,cAAc,aAAaC,UAAYe,EAAKS,oBAAoBG,OACzE7B,SAASC,cAAc,iBAAiBC,UAAYe,EAAKS,oBAAoBI,kBAb9E9B,SAAIqB,cAAY,cAAUJ,UAAMA,EAAAS,oBAAAK,YAE/B/B,SAAOC,cAAY+B,aAAT9B,UAAV+B,KAAAC,MAAAjB,EAAAS,oBAAAS,SAAAC,GAECC,IAACC,EAJ6BC,EAmB3BC,EAfDC,EAAUC,oBAAZC,qBAAAL,KAAAM,MAAA,IAAA,GAeqB,KAZtB3B,EAAAS,oBAAAiB,qBAAAJ,QACAvC,SAAIoC,cAAc,SAAlBlC,UAAAsC,GAGAxC,SAAAA,OAASC,QACTD","file":"main.js","sourcesContent":["let coords = {\r\n\tlat: '',\r\n\tlon: ''\r\n};\r\nlet serviceUrl;\r\n/*------------------------------------------------------------------------*/\r\nlet calendar = function (timeClassContainer, dateClassContainer) {\r\n\r\n\tlet setDate = function () {\r\n\t\tlet now = new Date();\r\n\t\tlet DD = now.getDate();\r\n\t\tlet MM = now.getMonth() + 1;\r\n\t\tlet YY = now.getFullYear();\r\n\t\tlet hh = now.getHours();\r\n\t\tlet mm = now.getMinutes();\r\n\t\tlet ss = now.getSeconds();\r\n\t\tif (DD < 10) {\r\n\t\t\tDD = \"0\" + DD;\r\n\t\t}\r\n\t\tif (MM < 10) {\r\n\t\t\tMM = \"0\" + MM;\r\n\t\t}\r\n\t\tif (hh < 10) {\r\n\t\t\thh = \"0\" + hh;\r\n\t\t}\r\n\t\tif (mm < 10) {\r\n\t\t\tmm = \"0\" + mm\r\n\t\t};\r\n\t\tif (ss < 10) {\r\n\t\t\tss = \"0\" + ss\r\n\t\t};\r\n\t\tlet readyTime = hh + ':' + mm + ':' + ss;\r\n\t\tlet readyDate = DD + '.' + MM + '.' + YY;\r\n\t\tlet dateCont = document.querySelector('.' + dateClassContainer).innerHTML = readyDate;\r\n\t\tlet timeCont = document.querySelector('.' + timeClassContainer).innerHTML = readyTime;\r\n\t}\r\n\tsetInterval(setDate, 1000);\r\n};\r\n\r\n/*------------------------------------------------------------------------*/\r\nlet getCoordinates = function () {\r\n\tnavigator.geolocation.getCurrentPosition(function (pos) {\r\n\t\tlet crd = pos.coords;\r\n\t\tcoords.lat = crd.latitude;\r\n\t\tcoords.lon = crd.longitude;\r\n\t\tgetData();\r\n\t});\r\n};\r\n/*------------------------------------------------------------------------*/\r\nlet getData = function () {\r\n\r\n\tconst urlBase = 'https://api.weatherbit.io/v2.0/current';\r\n\r\n\tserviceUrl = `urlBase`;\r\n\r\n\r\n\tlet xmlhttp = new XMLHttpRequest();\r\n\txmlhttp.onreadystatechange = function () {\r\n\t\tif (this.readyState == 4 && this.status == 200) {\r\n\t\t\tlet data = JSON.parse(this.responseText);\r\n\t\t\tdisplayer(data);\r\n\t\t}\r\n\t};\r\n\txmlhttp.open(\"get\", serviceUrl, true);\r\n\txmlhttp.send();\r\n};\r\n\r\n/*------------------------------------------------------------------------*/\r\nlet displayer = function (data) {\r\n\r\n\tlet src = document.querySelectorAll('.kreciol');\r\n\tsrc.forEach(function (a) {\r\n\t\ta.classList.remove(\"kreciol\");\r\n\t})\r\n\r\n\t//mph to mps convert\r\n\tlet toMpsFactor = 0.44704;\r\n\r\n\tdocument.querySelector('.cond-img img').src = data.current_observation.icon_url;\r\n\tdocument.querySelector('.cond-descr').innerHTML = data.current_observation.weather;\r\n\tdocument.querySelector('.val-temp').innerHTML = data.current_observation.temp_c;\r\n\tdocument.querySelector('.val-humidity').innerHTML = data.current_observation.relative_humidity;\r\n\tdocument.querySelector('.val-press').innerHTML = data.current_observation.pressure_mb;\r\n\tdocument.querySelector('.val-wind').innerHTML = Math.round(data.current_observation.wind_mph * toMpsFactor);\r\n\r\n\tlet city = data.current_observation.observation_location.city.split(',', 1);\r\n\tlet country = data.current_observation.observation_location.country\r\n\tlet location = city + ', ' + country;\r\n\tdocument.querySelector('.city').innerHTML = location;\r\n};\r\ncalendar('time', 'date');\r\ngetCoordinates();"]}